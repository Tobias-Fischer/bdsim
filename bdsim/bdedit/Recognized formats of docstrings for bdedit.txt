
Parameter value resitrictions
================================================================================================================================================
For assigning the default value for a parameter, expected format in param definition:
	..., defaults to X

	text up until 'defaults to' is ignored
	after 'to' bdedit expects to see either a value that can be evaluated or a string
	for safety, bdedit assigns None as the default type, and if any other type is found, None is replaced by that type
	if defaults to None is found or no other type is found, bdedit will assign the NoneType as an acceptable type for the parameter

e.g	frequency, defaults to 1
	the constant, defaults to None
	interpolation method, defaults to 'linear'
	denominator coefficients, defaults to [1,1]
	axis labels (xlabel, ylabel), defaults to ["X","Y"]
	Initial phase of signal in the range [0,1], defaults to 0
	duty cycle for square wave in range [0,1], defaults to 0.5
	extra keyword arguments passed to the function, defaults to {}
	pass in a reference to a dictionary instance, defaults to False
	extra positional arguments passed to the function, defaults to []
	signs associated with input ports, accepted characters: + or -, defaults to '++'
	
------------------------------------------------------------------------------------------------------------------------------------------------
For parameters where input can be one of certain keywords, expected format in param definition:
	... one of: 'option1', 'option2' [default], 'option3'

e.g.	type of waveform to generate, one of: 'sine', 'square' [default], 'triangle'
	frequency unit, one of: 'rad/s', 'Hz' [default]

	text up until 'one of:' is ignored
	after 'of:' every option is expected to be given as as string, with '' or ""
	options are differentiated by the comma ,
	whichever option should be the default value, it should have a [default] after the 'option' but before the comma
	after last option, there should be no more text

------------------------------------------------------------------------------------------------------------------------------------------------
For parameters where input must be within a range, expected format in param definition:
	... range [min, max]

e.g. 	duty cycle for square wave in range [0,1], defaults to 0.5
	Initial phase of signal in the range [0,1], defaults to 0

	text up to 'range' is ignored
	after 'range' bdedit tries to evalute the text. If list instance with a length of 2 is found, format is accepted, else error message

------------------------------------------------------------------------------------------------------------------------------------------------
For parameters where input must be one of certain symbolic characters, expected format in param definition:
	... accepted characters: char1 or char2 or char3

e.g	signs associated with input ports, accepted characters: + or -, defaults to '++'
	operations associated with input ports, accepted characters: * or /, defaults to '**'

	text up to 'accepted characters:' is ignored
	after 'characters:', from the first value, every second value is iterated through (as the keyword or seperates the character options)
	each value that is iterated through, if value is NOT alphanumeric, it is accepted, else ignored. 
	bdedit knows it has reached the end of the character options when there is no longer an 'or' after a given value

------------------------------------------------------------------------------------------------------------------------------------------------



================================================================================================================================================
Parameter type restrictions
================================================================================================================================================
If the keyword 'array_like' is used in the type definition of a parameter:
* If input is not size restricted, expected format in type definition:
	... or array_like, ...
	array_like ..., ...
	array_like, ...

e.g 	float or array_like, optional
	array_like, shape (N,) optional
	array_like, optional
	array_like

* If input is size restricted, expected format in type definition:
	... or array_like(N), ...
	array_like(N) ..., ...
	array_like(N), ...

e.g 	str or array_like(2) or array_like(4)
	str or array_like(2), optional
	str or array_like(2)
	array_like(2)
	
	
	bdedit uses regex to search for 'array_like' (not size restricted) and 'array_like([0-9])' (size restricted)
	if a match, or multiple matches for 'array_like' are found, each will be checked for size restrictions
		if size restrictions are found: 		parameter restricted to types: list or dict
		else if no size restrictions are found:		parameter restricted to types: list, dict, int or float

------------------------------------------------------------------------------------------------------------------------------------------------
If the keyword 'sequence' or 'string' (instead of str) is used in the type definition of a parameter:
* If 'string' found, parameter will be granted types: 		list and string 
* If 'sequence' found, parameter will be granted types:		list

e.g. 	callable or sequence of callables, optional
	sequence of strings
	bool or sequence
	sequence of time, value pairs

------------------------------------------------------------------------------------------------------------------------------------------------
If any of the following keywords are used in type definition of parameter (str, int, float, list, dict):

	bdedit will simply try to evaluate the given text for the type definition, so if it is any of those above-mentioned,
	the evaluation will pass and that type will be assigned

------------------------------------------------------------------------------------------------------------------------------------------------
If any of the following keywords are used in type definition of parameter (tuple, callable, any)

	if callable or any: bdedit will grand the parameter the type: str 
	if tuple: bdedit will grand the parameter the type: list 

------------------------------------------------------------------------------------------------------------------------------------------------
If for whatever reason a parameter type is not detected, bdedit will assign 'str' as the default type. 
------------------------------------------------------------------------------------------------------------------------------------------------